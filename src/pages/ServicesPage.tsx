import {
  Box,
  Container,
  Heading,
  Text,
  VStack,
  HStack,
  Grid,
  Badge,
  Button,
} from '@chakra-ui/react'
import { motion } from 'framer-motion'
import { Link as RouterLink } from 'react-router-dom'
// import { CheckIcon } from '@chakra-ui/icons'

const MotionBox = motion(Box)

const ServicesPage = () => {
  const services = [
    {
      title: '–ü–æ–¥–±–æ—Ä –ø–µ—Ä—Å–æ–Ω–∞–ª–∞',
      description: '–ù–∞—Ö–æ–¥–∏–º –ª—É—á—à–∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –¥–ª—è –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏',
      icon: 'üë•',
      features: [
        '–ü–æ–∏—Å–∫ –ø–æ –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–º —Å–µ—Ç—è–º',
        '–ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤—å—é –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–π',
        '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π',
        '–ì–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ –ø–æ–¥–æ–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞',
      ],
      price: '–æ—Ç 15% –æ—Ç –≥–æ–¥–æ–≤–æ–π –∑–∞—Ä–ø–ª–∞—Ç—ã',
      color: 'blue',
    },
    {
      title: 'HR-–∫–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥',
      description: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º',
      icon: 'üíº',
      features: [
        '–ê—É–¥–∏—Ç HR-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤',
        '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ HR-—Å—Ç—Ä–∞—Ç–µ–≥–∏–∏',
        '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã',
        '–í–Ω–µ–¥—Ä–µ–Ω–∏–µ KPI –∏ —Å–∏—Å—Ç–µ–º—ã –º–æ—Ç–∏–≤–∞—Ü–∏–∏',
      ],
      price: '–æ—Ç 50 000 ‚ÇΩ/–º–µ—Å—è—Ü',
      color: 'green',
    },
    {
      title: '–û–±—É—á–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤',
      description: '–†–∞–∑–≤–∏—Ç–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤',
      icon: 'üéì',
      features: [
        '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ç—Ä–µ–Ω–∏–Ω–≥–∏',
        '–û–Ω–ª–∞–π–Ω-–æ–±—É—á–µ–Ω–∏–µ',
        '–ú–µ–Ω—Ç–æ—Ä—Å—Ç–≤–æ –∏ –∫–æ—É—á–∏–Ω–≥',
        '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤',
      ],
      price: '–æ—Ç 25 000 ‚ÇΩ/–¥–µ–Ω—å',
      color: 'purple',
    },
    {
      title: '–ê—É—Ç—Å–æ—Ä—Å–∏–Ω–≥ HR',
      description: '–ü–æ–ª–Ω–æ–µ –≤–µ–¥–µ–Ω–∏–µ –∫–∞–¥—Ä–æ–≤–æ–≥–æ –¥–µ–ª–æ–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞',
      icon: 'üìã',
      features: [
        '–í–µ–¥–µ–Ω–∏–µ –∫–∞–¥—Ä–æ–≤–æ–≥–æ —É—á–µ—Ç–∞',
        '–†–∞—Å—á–µ—Ç –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç—ã',
        '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤',
        '–°–æ–±–ª—é–¥–µ–Ω–∏–µ —Ç—Ä—É–¥–æ–≤–æ–≥–æ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞',
      ],
      price: '–æ—Ç 30 000 ‚ÇΩ/–º–µ—Å—è—Ü',
      color: 'orange',
    },
    {
      title: '–û—Ü–µ–Ω–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞',
      description: '–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤',
      icon: 'üìä',
      features: [
        '360-–≥—Ä–∞–¥—É—Å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞',
        '–ê—Å—Å–µ—Å—Å–º–µ–Ω—Ç-—Ü–µ–Ω—Ç—Ä',
        '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ',
        '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞–Ω–æ–≤ —Ä–∞–∑–≤–∏—Ç–∏—è',
      ],
      price: '–æ—Ç 20 000 ‚ÇΩ/—Å–æ—Ç—Ä—É–¥–Ω–∏–∫',
      color: 'teal',
    },
    {
      title: '–ê–¥–∞–ø—Ç–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞',
      description: '–ü–æ–º–æ—â—å –Ω–æ–≤—ã–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏',
      icon: 'ü§ù',
      features: [
        '–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏',
        '–ù–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–æ',
        '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ—Ü–µ—Å—Å–∞',
        '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞',
      ],
      price: '–æ—Ç 15 000 ‚ÇΩ/—Å–æ—Ç—Ä—É–¥–Ω–∏–∫',
      color: 'pink',
    },
  ]

  const process = [
    {
      step: '1',
      title: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è',
      description: '–û–±—Å—É–∂–¥–∞–µ–º –≤–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∏ —Ü–µ–ª–∏',
    },
    {
      step: '2',
      title: '–ê–Ω–∞–ª–∏–∑',
      description: '–ò–∑—É—á–∞–µ–º —Å–ø–µ—Ü–∏—Ñ–∏–∫—É –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞',
    },
    {
      step: '3',
      title: '–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ',
      description: '–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω',
    },
    {
      step: '4',
      title: '–†–µ–∞–ª–∏–∑–∞—Ü–∏—è',
      description: '–í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏',
    },
    {
      step: '5',
      title: '–ö–æ–Ω—Ç—Ä–æ–ª—å',
      description: '–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º',
    },
  ]

  return (
    <Box>
      {/* Hero Section */}
      <Box
        bgGradient="linear(to-r, blue.600, blue.800)"
        color="white"
        py={20}
      >
        <Container maxW="1200px">
          <MotionBox
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            textAlign="center"
          >
            <Heading size="2xl" mb={6}>
              –ù–∞—à–∏ —É—Å–ª—É–≥–∏
            </Heading>
            <Text fontSize="xl" color="gray.200" maxW="800px" mx="auto">
              –ü–æ–ª–Ω—ã–π —Å–ø–µ–∫—Ç—Ä HR-—É—Å–ª—É–≥ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞. 
              –û—Ç –ø–æ–¥–±–æ—Ä–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –¥–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥–∞.
            </Text>
          </MotionBox>
        </Container>
      </Box>

      {/* Services Grid */}
      <Box py={20}>
        <Container maxW="1200px">
          <Grid templateColumns={{ base: '1fr', md: 'repeat(2, 1fr)', lg: 'repeat(3, 1fr)' }} gap={8}>
            {services.map((service, index) => (
              <MotionBox
                key={service.title}
                initial={{ opacity: 0, y: 30 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: index * 0.1 }}
              >
                <Box
                  border="1px solid"
                  borderColor="gray.200"
                  borderRadius="lg"
                  p={8}
                  _hover={{ 
                    boxShadow: 'xl',
                    transform: 'translateY(-5px)',
                    transition: 'all 0.3s ease'
                  }}
                  height="100%"
                >
                  <VStack gap={6} align="stretch" height="100%">
                    <VStack gap={4} align="start">
                      <HStack gap={4}>
                        <Box fontSize="3xl">{service.icon}</Box>
                        <Badge colorScheme={service.color} variant="solid" px={3} py={1}>
                          {service.price}
                        </Badge>
                      </HStack>
                      <Heading size="md">{service.title}</Heading>
                      <Text color="gray.600">{service.description}</Text>
                    </VStack>

                    <VStack gap={2} align="stretch" flex="1">
                      {service.features.map((feature, featureIndex) => (
                        <HStack key={featureIndex} gap={2}>
                          <Text color={`${service.color}.500`}>‚úì</Text>
                          <Text fontSize="sm">{feature}</Text>
                        </HStack>
                      ))}
                    </VStack>

                    <RouterLink to="/contact">
                      <Button
                        colorScheme={service.color}
                        variant="outline"
                        size="sm"
                      >
                        –ó–∞–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥—É
                      </Button>
                    </RouterLink>
                  </VStack>
                </Box>
              </MotionBox>
            ))}
          </Grid>
        </Container>
      </Box>

      {/* Process Section */}
      <Box py={20} bg="gray.50">
        <Container maxW="1200px">
          <VStack gap={12}>
            <MotionBox
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              textAlign="center"
            >
              <Heading size="xl" mb={4}>
                –ö–∞–∫ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º
              </Heading>
              <Text fontSize="lg" color="gray.600" maxW="600px">
                –ü—Ä–æ—Å—Ç–æ–π –∏ –ø–æ–Ω—è—Ç–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞
              </Text>
            </MotionBox>

            <Grid templateColumns={{ base: '1fr', md: 'repeat(5, 1fr)' }} gap={8}>
              {process.map((step, index) => (
                <MotionBox
                  key={step.step}
                  initial={{ opacity: 0, y: 30 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                >
                  <VStack gap={4} textAlign="center">
                    <Box
                      bg="blue.600"
                      color="white"
                      borderRadius="full"
                      w={12}
                      h={12}
                      display="flex"
                      alignItems="center"
                      justifyContent="center"
                      fontWeight="bold"
                      fontSize="lg"
                    >
                      {step.step}
                    </Box>
                    <Heading size="sm">{step.title}</Heading>
                    <Text color="gray.600" fontSize="sm">
                      {step.description}
                    </Text>
                  </VStack>
                </MotionBox>
              ))}
            </Grid>
          </VStack>
        </Container>
      </Box>

      {/* CTA Section */}
      <Box
        bgGradient="linear(to-r, blue.600, blue.800)"
        color="white"
        py={16}
      >
        <Container maxW="1200px">
          <MotionBox
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            textAlign="center"
          >
            <Heading size="xl" mb={4}>
              –ì–æ—Ç–æ–≤—ã –æ–±—Å—É–¥–∏—Ç—å –≤–∞—à –ø—Ä–æ–µ–∫—Ç?
            </Heading>
            <Text fontSize="lg" mb={8} color="gray.200">
              –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
            </Text>
            <HStack gap={4} justify="center">
              <RouterLink to="/contact">
                <Button
                  size="lg"
                  colorScheme="white"
                  variant="solid"
                  bg="white"
                  color="blue.600"
                  _hover={{ bg: 'gray.100' }}
                >
                  –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
                </Button>
              </RouterLink>
              <Button
                size="lg"
                variant="outline"
                borderColor="white"
                color="white"
                _hover={{ bg: 'white', color: 'blue.600' }}
              >
                –°–∫–∞—á–∞—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é
              </Button>
            </HStack>
          </MotionBox>
        </Container>
      </Box>
    </Box>
  )
}

export default ServicesPage