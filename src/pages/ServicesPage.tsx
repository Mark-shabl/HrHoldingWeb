import {
  Box,
  Container,
  Text,
  VStack,
  HStack,
  Button,
  Flex,
} from '@chakra-ui/react'
import { motion } from 'framer-motion'
import { useState, useEffect } from 'react'
import { Link as RouterLink } from 'react-router-dom'

const MotionBox = motion(Box)

const ServicesPage = () => {
  const [scrollY, setScrollY] = useState(0)

  useEffect(() => {
    const handleScroll = () => setScrollY(window.scrollY)
    window.addEventListener('scroll', handleScroll)
    return () => window.removeEventListener('scroll', handleScroll)
  }, [])

  const services = [
    {
      title: '–ü–æ–¥–±–æ—Ä –ø–µ—Ä—Å–æ–Ω–∞–ª–∞',
      description: '–ù–∞—Ö–æ–¥–∏–º –ª—É—á—à–∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –¥–ª—è –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏',
      icon: 'üë•',
      features: [
        '–ü–æ–∏—Å–∫ –ø–æ –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–º —Å–µ—Ç—è–º',
        '–ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤—å—é –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–π',
        '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π',
        '–ì–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ –ø–æ–¥–æ–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞',
      ],
      price: '–æ—Ç 15% –æ—Ç –≥–æ–¥–æ–≤–æ–π –∑–∞—Ä–ø–ª–∞—Ç—ã',
      position: { top: '5%', left: '10%' },
      delay: 0,
    },
    {
      title: 'HR-–∫–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥',
      description: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º',
      icon: 'üíº',
      features: [
        '–ê—É–¥–∏—Ç HR-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤',
        '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ HR-—Å—Ç—Ä–∞—Ç–µ–≥–∏–∏',
        '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã',
        '–í–Ω–µ–¥—Ä–µ–Ω–∏–µ KPI –∏ —Å–∏—Å—Ç–µ–º—ã –º–æ—Ç–∏–≤–∞—Ü–∏–∏',
      ],
      price: '–æ—Ç 50 000 ‚ÇΩ/–º–µ—Å—è—Ü',
      position: { top: '15%', right: '5%' },
      delay: 0.1,
    },
    {
      title: '–û–±—É—á–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤',
      description: '–†–∞–∑–≤–∏—Ç–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤',
      icon: 'üéì',
      features: [
        '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ç—Ä–µ–Ω–∏–Ω–≥–∏',
        '–û–Ω–ª–∞–π–Ω-–æ–±—É—á–µ–Ω–∏–µ',
        '–ú–µ–Ω—Ç–æ—Ä—Å—Ç–≤–æ –∏ –∫–æ—É—á–∏–Ω–≥',
        '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤',
      ],
      price: '–æ—Ç 25 000 ‚ÇΩ/–¥–µ–Ω—å',
      position: { top: '40%', left: '5%' },
      delay: 0.2,
    },
    {
      title: '–ê—É—Ç—Å–æ—Ä—Å–∏–Ω–≥ HR',
      description: '–ü–æ–ª–Ω–æ–µ –≤–µ–¥–µ–Ω–∏–µ –∫–∞–¥—Ä–æ–≤–æ–≥–æ –¥–µ–ª–æ–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞',
      icon: 'üìã',
      features: [
        '–í–µ–¥–µ–Ω–∏–µ –∫–∞–¥—Ä–æ–≤–æ–≥–æ —É—á–µ—Ç–∞',
        '–†–∞—Å—á–µ—Ç –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç—ã',
        '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤',
        '–°–æ–±–ª—é–¥–µ–Ω–∏–µ —Ç—Ä—É–¥–æ–≤–æ–≥–æ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞',
      ],
      price: '–æ—Ç 30 000 ‚ÇΩ/–º–µ—Å—è—Ü',
      position: { top: '50%', right: '10%' },
      delay: 0.3,
    },
    {
      title: '–û—Ü–µ–Ω–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞',
      description: '–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤',
      icon: 'üìä',
      features: [
        '360-–≥—Ä–∞–¥—É—Å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞',
        '–ê—Å—Å–µ—Å—Å–º–µ–Ω—Ç-—Ü–µ–Ω—Ç—Ä',
        '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ',
        '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞–Ω–æ–≤ —Ä–∞–∑–≤–∏—Ç–∏—è',
      ],
      price: '–æ—Ç 20 000 ‚ÇΩ/—Å–æ—Ç—Ä—É–¥–Ω–∏–∫',
      position: { bottom: '25%', left: '15%' },
      delay: 0.4,
    },
    {
      title: '–ê–¥–∞–ø—Ç–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞',
      description: '–ü–æ–º–æ—â—å –Ω–æ–≤—ã–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏',
      icon: 'ü§ù',
      features: [
        '–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏',
        '–ù–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–æ',
        '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ—Ü–µ—Å—Å–∞',
        '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞',
      ],
      price: '–æ—Ç 15 000 ‚ÇΩ/—Å–æ—Ç—Ä—É–¥–Ω–∏–∫',
      position: { bottom: '10%', right: '5%' },
      delay: 0.5,
    },
  ]

  const process = [
    {
      step: '1',
      title: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è',
      description: '–û–±—Å—É–∂–¥–∞–µ–º –≤–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∏ —Ü–µ–ª–∏',
      delay: 0,
    },
    {
      step: '2',
      title: '–ê–Ω–∞–ª–∏–∑',
      description: '–ò–∑—É—á–∞–µ–º —Å–ø–µ—Ü–∏—Ñ–∏–∫—É –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞',
      delay: 0.1,
    },
    {
      step: '3',
      title: '–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ',
      description: '–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω',
      delay: 0.2,
    },
    {
      step: '4',
      title: '–†–µ–∞–ª–∏–∑–∞—Ü–∏—è',
      description: '–í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏',
      delay: 0.3,
    },
    {
      step: '5',
      title: '–ö–æ–Ω—Ç—Ä–æ–ª—å',
      description: '–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º',
      delay: 0.4,
    },
  ]

  return (
    <Box pt="100px">
      {/* Hero Section */}
      <Box
        minH="80vh"
        bg="var(--beige-light)"
        position="relative"
        overflow="hidden"
      >
        {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω */}
        <Box
          position="absolute"
          top={0}
          left={0}
          right={0}
          bottom={0}
          style={{
            transform: `translateY(${scrollY * 0.3}px)`,
          }}
          className="parallax-element"
        >
          <svg
            width="100%"
            height="100%"
            viewBox="0 0 1000 1000"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            opacity={0.1}
          >
            <defs>
              <pattern id="services-grid" width="60" height="60" patternUnits="userSpaceOnUse">
                <path d="M 60 0 L 0 0 0 60" fill="none" stroke="var(--navy-deep)" strokeWidth="1"/>
              </pattern>
            </defs>
            <rect width="100%" height="100%" fill="url(#services-grid)" />
          </svg>
        </Box>
        
        <Container maxW="1200px" position="relative" zIndex={1} px={{ base: 4, md: 6 }}>
          <Flex
            direction={{ base: 'column', lg: 'row' }}
            align="center"
            justify="space-between"
            minH="80vh"
            gap={12}
          >
            <VStack
              align={{ base: 'center', lg: 'start' }}
              gap={8}
              maxW={{ base: '100%', lg: '60%' }}
            >
              <MotionBox
                initial={{ opacity: 0, y: 50 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8 }}
              >
                <VStack gap={6} align={{ base: 'center', lg: 'start' }}>
                  <Text
                    className="heading-premium"
                    fontSize={{ base: '3xl', md: '4xl', lg: '5xl' }}
                    color="var(--navy-deep)"
                    textAlign={{ base: 'center', lg: 'left' }}
                  >
                    –ù–∞—à–∏ —É—Å–ª—É–≥–∏
                  </Text>
                  <Text
                    className="text-premium"
                    fontSize={{ base: 'lg', md: 'xl' }}
                    color="var(--gray-medium)"
                    textAlign={{ base: 'center', lg: 'left' }}
                    maxW="600px"
                  >
                    –ü–æ–ª–Ω—ã–π —Å–ø–µ–∫—Ç—Ä HR-—É—Å–ª—É–≥ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞. 
                    –û—Ç –ø–æ–¥–±–æ—Ä–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –¥–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥–∞.
                  </Text>
                  <Text
                    className="text-secondary"
                    fontSize={{ base: 'md', md: 'lg' }}
                    color="var(--gray-dark)"
                    textAlign={{ base: 'center', lg: 'left' }}
                    maxW="500px"
                  >
                    –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –≤–∞—à–µ–≥–æ HR-–æ—Ç–¥–µ–ª–∞ —Å –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º.
                  </Text>
                </VStack>
              </MotionBox>

              <MotionBox
                initial={{ opacity: 0, y: 30 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8, delay: 0.3 }}
              >
                <HStack gap={4} flexWrap="wrap" justify={{ base: 'center', lg: 'start' }}>
                  <Button className="premium-button" size="lg">
                    –í—ã–±—Ä–∞—Ç—å —É—Å–ª—É–≥—É
                  </Button>
                  <Button className="accent-button" size="lg">
                    –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
                  </Button>
                </HStack>
              </MotionBox>
            </VStack>
            
            {/* –ê—Å–∏–º–º–µ—Ç—Ä–∏—á–Ω—ã–µ –±–ª–æ–∫–∏ —É—Å–ª—É–≥ */}
            <Box
              position="relative"
              w={{ base: '100%', lg: '50%' }}
              h="600px"
              display={{ base: 'none', lg: 'block' }}
              px={4}
            >
              {services.slice(0, 4).map((service) => (
                <MotionBox
                  key={service.title}
                  position="absolute"
                  {...service.position}
                  initial={{ opacity: 0, scale: 0.8, rotate: -5 }}
                  animate={{ opacity: 1, scale: 1, rotate: 0 }}
                  transition={{ 
                    type: "spring", 
                    stiffness: 100, 
                    damping: 15,
                    delay: service.delay + 0.5
                  }}
                  whileHover={{ 
                    scale: 1.05, 
                    rotate: 2,
                    transition: { duration: 0.2 }
                  }}
                >
                  <Box
                    className="minimal-card"
                    p={6}
                    w="200px"
                    cursor="pointer"
                  >
                    <VStack gap={3} align="start">
                      <Text fontSize="2xl">{service.icon}</Text>
                      <Text
                        className="heading-premium"
                        fontSize="md"
                        color="var(--navy-deep)"
                      >
                        {service.title}
                      </Text>
                      <Text
                        className="text-secondary"
                        fontSize="xs"
                        color="var(--gray-medium)"
                      >
                        {service.price}
                      </Text>
                    </VStack>
                  </Box>
                </MotionBox>
              ))}
            </Box>
          </Flex>
        </Container>
      </Box>

      {/* Services Grid */}
      <Box
        py={24}
        bg="var(--beige-dusty)"
        position="relative"
      >
        <Container maxW="1200px" px={{ base: 4, md: 6 }}>
          <VStack gap={16}>
            <MotionBox
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.8 }}
              textAlign="center"
            >
              <VStack gap={6}>
                <Text
                  className="heading-premium"
                  fontSize={{ base: '3xl', md: '4xl' }}
                  color="var(--navy-deep)"
                >
                  –ü–æ–ª–Ω—ã–π —Å–ø–µ–∫—Ç—Ä —É—Å–ª—É–≥
                </Text>
                <Text
                  className="text-premium"
                  fontSize={{ base: 'lg', md: 'xl' }}
                  color="var(--gray-medium)"
                  maxW="600px"
                >
                  –û—Ç –ø–æ–¥–±–æ—Ä–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –¥–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥–∞
                </Text>
              </VStack>
            </MotionBox>

            <Flex
              direction={{ base: 'column', md: 'row' }}
              gap={8}
              justify="center"
              align="stretch"
              w="100%"
              flexWrap="wrap"
            >
              {services.map((service, index) => (
                <MotionBox
                  key={service.title}
                  initial={{ opacity: 0, y: 50 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ 
                    duration: 0.8, 
                    delay: service.delay,
                    type: "spring",
                    stiffness: 100
                  }}
                  whileHover={{ 
                    y: -10,
                    transition: { duration: 0.3 }
                  }}
                  flex="1"
                  minW="300px"
                  maxW="400px"
                >
                  <Box
                    className="minimal-card"
                    p={8}
                    h="100%"
                  >
                    <VStack gap={6} align="stretch" h="100%">
                      <VStack gap={4} align="start">
                        <HStack gap={4} align="start">
                          <Text fontSize="3xl">{service.icon}</Text>
                          <VStack gap={2} align="start" flex="1">
                            <Text
                              className="heading-premium"
                              fontSize="lg"
                              color="var(--navy-deep)"
                            >
                              {service.title}
                            </Text>
                            <Text
                              className="text-secondary"
                              fontSize="sm"
                              color="var(--terracotta)"
                              fontWeight="semibold"
                            >
                              {service.price}
                            </Text>
                          </VStack>
                        </HStack>
                        <Text
                          className="text-premium"
                          color="var(--gray-medium)"
                        >
                          {service.description}
                        </Text>
                      </VStack>

                      <VStack gap={3} align="stretch" flex="1">
                        {service.features.map((feature) => (
                          <HStack key={feature} gap={3} align="start">
                            <Text
                              color="var(--terracotta)"
                              fontSize="sm"
                              mt={1}
                            >
                              ‚úì
                            </Text>
                            <Text
                              className="text-secondary"
                              fontSize="sm"
                              color="var(--gray-medium)"
                            >
                              {feature}
                            </Text>
                          </HStack>
                        ))}
                      </VStack>

                      <RouterLink to="/contact">
                        <Button
                          className="accent-button"
                          size="sm"
                          width="full"
                        >
                          –ó–∞–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥—É
                        </Button>
                      </RouterLink>
                    </VStack>
                  </Box>
                </MotionBox>
              ))}
            </Flex>
          </VStack>
        </Container>
      </Box>

      {/* Process Section */}
      <Box
        py={24}
        bg="var(--beige-light)"
        position="relative"
      >
        <Container maxW="1200px" px={{ base: 4, md: 6 }}>
          <VStack gap={16}>
            <MotionBox
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.8 }}
              textAlign="center"
            >
              <VStack gap={6}>
                <Text
                  className="heading-premium"
                  fontSize={{ base: '3xl', md: '4xl' }}
                  color="var(--navy-deep)"
                >
                  –ö–∞–∫ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º
                </Text>
                <Text
                  className="text-premium"
                  fontSize={{ base: 'lg', md: 'xl' }}
                  color="var(--gray-medium)"
                  maxW="600px"
                >
                  –ü—Ä–æ—Å—Ç–æ–π –∏ –ø–æ–Ω—è—Ç–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞
                </Text>
              </VStack>
            </MotionBox>

            <Flex
              direction={{ base: 'column', md: 'row' }}
              gap={8}
              justify="center"
              align="center"
              w="100%"
              flexWrap="wrap"
            >
              {process.map((step) => (
                <MotionBox
                  key={step.step}
                  initial={{ opacity: 0, y: 50 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ 
                    duration: 0.8, 
                    delay: step.delay,
                    type: "spring",
                    stiffness: 100
                  }}
                  whileHover={{ 
                    y: -5,
                    transition: { duration: 0.3 }
                  }}
                  flex="1"
                  minW="150px"
                  maxW="200px"
                >
                  <VStack gap={6} textAlign="center">
                    <Box
                      className="minimal-card"
                      borderRadius="full"
                      w={16}
                      h={16}
                      display="flex"
                      alignItems="center"
                      justifyContent="center"
                      bg="var(--terracotta)"
                      color="var(--beige-light)"
                    >
                      <Text
                        className="heading-premium"
                        fontSize="lg"
                      >
                        {step.step}
                      </Text>
                    </Box>
                    <VStack gap={2}>
                      <Text
                        className="heading-premium"
                        fontSize="md"
                        color="var(--navy-deep)"
                      >
                        {step.title}
                      </Text>
                      <Text
                        className="text-secondary"
                        fontSize="sm"
                        color="var(--gray-medium)"
                      >
                        {step.description}
                      </Text>
                    </VStack>
                  </VStack>
                </MotionBox>
              ))}
            </Flex>
          </VStack>
        </Container>
      </Box>

      {/* CTA Section */}
      <Box
        py={24}
        bg="var(--navy-deep)"
        position="relative"
      >
        <Container maxW="1200px" px={{ base: 4, md: 6 }}>
          <MotionBox
            initial={{ opacity: 0, y: 50 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.8 }}
            textAlign="center"
          >
            <VStack gap={12}>
              <VStack gap={6}>
                <Text
                  className="heading-premium"
                  fontSize={{ base: '3xl', md: '4xl', lg: '5xl' }}
                  color="var(--beige-light)"
                >
                  –ì–æ—Ç–æ–≤—ã –æ–±—Å—É–¥–∏—Ç—å –≤–∞—à –ø—Ä–æ–µ–∫—Ç?
                </Text>
                <Text
                  className="text-premium"
                  fontSize={{ base: 'lg', md: 'xl' }}
                  color="var(--beige-light)"
                  maxW="600px"
                >
                  –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
                </Text>
              </VStack>
              <HStack gap={6} flexWrap="wrap" justify="center">
                <RouterLink to="/contact">
                  <Button className="premium-button" size="lg">
                    –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
                  </Button>
                </RouterLink>
                <Button className="accent-button" size="lg">
                  –°–∫–∞—á–∞—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é
                </Button>
              </HStack>
            </VStack>
          </MotionBox>
        </Container>
      </Box>
    </Box>
  )
}

export default ServicesPage